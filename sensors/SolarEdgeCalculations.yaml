#### sensor: ###
#
#  - platform: integration
#    source: sensor.solar_imported_power_w
#    method: left
#    unit_prefix: k
#    name: solar_imported_power_kwh
#  - platform: integration
#    source: sensor.solar_exported_power_w
#    method: left
#    unit_prefix: k
#    name: solar_exported_power_kwh
#  - platform: integration
#    source: sensor.solar_production
#    method: left
#    unit_prefix: k
#    name: solar_production_kwh
#  - platform: integration
#    source: sensor.solar_house_consumption
#    method: left
#    unit_prefix: k
#    name: solar_house_consumption_kwh
#
#  - platform: template
#    sensors:
#      solaredgemodbus_ac_total_current:
#          friendly_name: "AC Total Current"
#          value_template: "{{ state_attr('sensor.semb', 'ac_total_current') }}"
#          unit_of_measurement: 'A'
#      solaredgemodbus_ac_current_phase_a:
#          friendly_name: "AC Current Phase A"
#          value_template: "{{ state_attr('sensor.semb', 'ac_current_phase_a') }}"
#          unit_of_measurement: 'A'
#      solaredgemodbus_ac_current_phase_b:
#          friendly_name: "AC Current Phase B"
#          value_template: "{{ state_attr('sensor.semb', 'ac_current_phase_b') }}"
#          unit_of_measurement: 'A'
#      solaredgemodbus_ac_current_phase_c:
#          friendly_name: "AC Current Phase C"
#          value_template: "{{ state_attr('sensor.semb', 'ac_current_phase_c') }}"
#          unit_of_measurement: 'A'
#      solaredgemodbus_ac_voltage_phase_ab:
#          friendly_name: "SolarEdge AC Output Voltage (A-B)"
#          value_template: "{{ state_attr('sensor.semb', 'ac_voltage_phase_ab') }}"
#          unit_of_measurement: 'V'
#      solaredgemodbus_ac_current_voltage_a:
#          friendly_name: "AC Voltage Phase A"
#          value_template: "{{ state_attr('sensor.semb', 'ac_voltage_phase_a') }}"
#          unit_of_measurement: 'V'
#      solaredgemodbus_ac_current_voltage_b:
#          friendly_name: "AC Voltage Phase B"
#          value_template: "{{ state_attr('sensor.semb', 'ac_voltage_phase_b') }}"
#          unit_of_measurement: 'V'
#      solaredgemodbus_ac_current_voltage_c:
#          friendly_name: "AC Voltage Phase C"
#          value_template: "{{ state_attr('sensor.semb', 'ac_voltage_phase_c') }}"
#          unit_of_measurement: 'V'
#      solaredgemodbus_ac_power_output:
#          friendly_name: "AC Power Output"
#          value_template: "{{ state_attr('sensor.semb', 'ac_power_output') }}"
#          unit_of_measurement: 'W'
#      solaredgemodbus_dc_current:
#          friendly_name: "DC Current"
#          value_template: "{{ state_attr('sensor.semb', 'dc_current') }}"
#          unit_of_measurement: 'A'
#      solaredgemodbus_dc_voltage:
#          friendly_name: "DC Voltage"
#          value_template: "{{ state_attr('sensor.semb', 'dc_voltage') }}"
#          unit_of_measurement: 'V'
#      solaredgemodbus_dc_power_input:
#          friendly_name: "DC Power Input"
#          value_template: "{{ state_attr('sensor.semb', 'dc_power_input') }}"
#          unit_of_measurement: 'W'
#      solaredgemodbus_heatsink_temp:
#          friendly_name: "Inverter Heat sink Temperature"
#          value_template: "{{ state_attr('sensor.semb', 'heat_sink_temperature') }}"
#          unit_of_measurement: 'Â°C'
#      solaredgemodbus_inverter_efficiency:
#          friendly_name: "Inverter efficiency"
#          value_template: "{{ state_attr('sensor.semb', 'computed_inverter_efficiency') }}"
#          unit_of_measurement: '%'
#      solaredgemodbus_ac_frequency:
#          friendly_name: "AC Frequency"
#          value_template: "{{ state_attr('sensor.semb', 'ac_frequency') }}"
#          unit_of_measurement: 'Hz'
#      solaredgemodbus_lifetime_production:
#          friendly_name: "Lifetime production"
#          value_template: "{{ (state_attr('sensor.semb', 'ac_lifetimeproduction') / 1000000) | round(2) }}"
#          unit_of_measurement: 'kWh'
#
#      solaredgemodbus_status:
#          friendly_name: "SolarEdge Status"
#          value_template: >-
#            {% if state_attr('sensor.semb', 'status') == 1 %}
#              Off
#            {% elif state_attr('sensor.semb', 'status') == 2 %}
#              Sleep
#            {% elif state_attr('sensor.semb', 'status') == 3 %}
#              Wake-Up
#            {% elif state_attr('sensor.semb', 'status') == 4 %}
#              Working
#            {% elif state_attr('sensor.semb', 'status') == 5 %}
#              Throttled
#            {% elif state_attr('sensor.semb', 'status') == 6 %}
#              Shut-Down
#            {% elif state_attr('sensor.semb', 'status') == 7 %}
#              Fault
#            {% elif state_attr('sensor.semb', 'status') == 8 %}
#              Maintenance
#            {% else %}
#              Unknown
#            {% endif %}
#
